generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bill {
  id          Int        @id @default(autoincrement())
  clientId    Int
  totalAmount Float
  createdAt   DateTime   @default(now())
  client      client     @relation(fields: [clientId], references: [id], map: "Bill_clientId_fkey")
  billitem    billitem[]

  @@index([clientId], map: "Bill_clientId_fkey")
}

model billitem {
  id           Int      @id @default(autoincrement())
  billId       Int
  ornamentId   String
  sellingPrice Float
  bill         bill     @relation(fields: [billId], references: [id], map: "BillItem_billId_fkey")
  ornament     ornament @relation(fields: [ornamentId], references: [ornamentId], map: "BillItem_ornamentId_fkey")

  @@index([billId], map: "BillItem_billId_fkey")
  @@index([ornamentId], map: "BillItem_ornamentId_fkey")
}

model client {
  id    Int    @id @default(autoincrement())
  name  String
  phone String @unique(map: "Client_phone_key")
  email String
  bill  bill[]
}

model merchant {
  merchantCode String     @id
  name         String
  phone        String     @unique(map: "Merchant_phone_key")
  ornament     ornament[]
}

model ornament {
  id           Int        @id @default(autoincrement())
  ornamentId   String     @unique(map: "Ornament_ornamentId_key")
  type         String
  merchantCode String
  weight       Float
  costPrice    Float
  purity       String
  qrCode       String?
  isSold       Boolean    @default(false)
  createdAt    DateTime   @default(now())
  billitem     billitem[]
  merchant     merchant   @relation(fields: [merchantCode], references: [merchantCode], map: "Ornament_merchantCode_fkey")

  @@index([merchantCode], map: "Ornament_merchantCode_fkey")
}
